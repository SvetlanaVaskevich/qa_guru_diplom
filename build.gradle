plugins{
    id 'java-library'
    id "io.qameta.allure" version "2.9.6"
}

repositories{
    mavenCentral()
}

def allureVersion = "2.17.2",
    selenideVersion = "6.3.3",
    restAssured = "4.4.0" ,
    junitVersion = "5.8.2" ,
    assertjVersion = "3.22.0" ,
    slf4jVersion = "1.7.32"

allure {
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
    report {
        version.set(allureVersion)
    }
}

dependencies {
    testImplementation(
            "io.rest-assured:rest-assured:$restAssured",
            "com.codeborne:selenide:$selenideVersion",
            "io.rest-assured:json-schema-validator:$restAssured",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.assertj:assertj-core:$assertjVersion",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    )
    testRuntimeOnly(
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    )
}

tasks.withType(JavaCompile){
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
//            events "started", "failed"
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

